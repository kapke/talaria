define(["require", "exports", 'es6-promise'], function (require, exports, rsvp) {
    var Promise = rsvp.Promise;
    var Repository = (function () {
        function Repository(entityInfo, unitOfWork, persistenceStrategy) {
            this.cache = [];
            this.entityInfo = entityInfo;
            this.unitOfWork = unitOfWork;
            this.persistenceStrategy = persistenceStrategy;
        }
        Repository.prototype.add = function (obj) {
            var _this = this;
            return this.has(obj).then(function (result) {
                if (!result) {
                    _this.cache.push(obj);
                    _this.unitOfWork.registerNew(_this.entityInfo, obj);
                }
            });
        };
        Repository.prototype.remove = function (obj) {
            var _this = this;
            return this.has(obj).then(function (result) {
                if (result) {
                    _this.cache.splice(_this.cache.indexOf(obj), 1);
                    _this.unitOfWork.registerDeleted(_this.entityInfo, obj);
                }
            });
        };
        Repository.prototype.findOne = function () {
            throw new Error('Not implemented yet');
        };
        Repository.prototype.findAll = function () {
            var _this = this;
            return this.persistenceStrategy.find(this.entityInfo, null).then(function (found) {
                found.forEach(function (item) {
                    if (_this.cache.indexOf(item) == -1) {
                        _this.cache.push(item);
                    }
                });
                return _this.cache.slice();
            });
        };
        Repository.prototype.has = function (obj) {
            var _this = this;
            return new Promise(function (resolve, reject) {
                if (_this.cache.indexOf(obj) > -1) {
                    resolve(true);
                }
                else {
                    _this.persistenceStrategy.find(_this.entityInfo, obj).then(function (found) {
                        found.forEach(function (item) {
                            this.cache.push(item);
                        });
                        resolve(found.length > 0);
                    });
                }
            });
        };
        return Repository;
    })();
    return Repository;
});

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlJlcG9zaXRvcnkudHMiXSwibmFtZXMiOlsiUmVwb3NpdG9yeSIsIlJlcG9zaXRvcnkuY29uc3RydWN0b3IiLCJSZXBvc2l0b3J5LmFkZCIsIlJlcG9zaXRvcnkucmVtb3ZlIiwiUmVwb3NpdG9yeS5maW5kT25lIiwiUmVwb3NpdG9yeS5maW5kQWxsIiwiUmVwb3NpdG9yeS5oYXMiXSwibWFwcGluZ3MiOiIwRUFJTyxJQUFJO0lBQ1gsSUFBTyxPQUFPLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQztJQUU5QixJQUFNLFVBQVU7UUFRZkEsU0FSS0EsVUFBVUEsQ0FRRkEsVUFBcUJBLEVBQUVBLFVBQXFCQSxFQUFFQSxtQkFBd0NBO1lBRnhGQyxVQUFLQSxHQUFPQSxFQUFFQSxDQUFDQTtZQUduQkEsSUFBSUEsQ0FBQ0EsVUFBVUEsR0FBR0EsVUFBVUEsQ0FBQ0E7WUFDN0JBLElBQUlBLENBQUNBLFVBQVVBLEdBQUdBLFVBQVVBLENBQUNBO1lBQzdCQSxJQUFJQSxDQUFDQSxtQkFBbUJBLEdBQUdBLG1CQUFtQkEsQ0FBQ0E7UUFDdERBLENBQUNBO1FBQ01ELHdCQUFHQSxHQUFWQSxVQUFXQSxHQUFNQTtZQUFqQkUsaUJBT0lBO1lBTkdBLE1BQU1BLENBQUNBLElBQUlBLENBQUNBLEdBQUdBLENBQUNBLEdBQUdBLENBQUNBLENBQUNBLElBQUlBLENBQUNBLFVBQUNBLE1BQWdCQTtnQkFDdkNBLEVBQUVBLENBQUFBLENBQUNBLENBQUNBLE1BQU1BLENBQUNBLENBQUNBLENBQUNBO29CQUNUQSxLQUFJQSxDQUFDQSxLQUFLQSxDQUFDQSxJQUFJQSxDQUFDQSxHQUFHQSxDQUFDQSxDQUFDQTtvQkFDckJBLEtBQUlBLENBQUNBLFVBQVVBLENBQUNBLFdBQVdBLENBQUNBLEtBQUlBLENBQUNBLFVBQVVBLEVBQUVBLEdBQUdBLENBQUNBLENBQUNBO2dCQUN0REEsQ0FBQ0E7WUFDTEEsQ0FBQ0EsQ0FBQ0EsQ0FBQ0E7UUFDUEEsQ0FBQ0E7UUFDR0YsMkJBQU1BLEdBQWJBLFVBQWNBLEdBQU9BO1lBQXJCRyxpQkFPSUE7WUFOR0EsTUFBTUEsQ0FBQ0EsSUFBSUEsQ0FBQ0EsR0FBR0EsQ0FBQ0EsR0FBR0EsQ0FBQ0EsQ0FBQ0EsSUFBSUEsQ0FBQ0EsVUFBQ0EsTUFBZ0JBO2dCQUN2Q0EsRUFBRUEsQ0FBQUEsQ0FBQ0EsTUFBTUEsQ0FBQ0EsQ0FBQ0EsQ0FBQ0E7b0JBQ1JBLEtBQUlBLENBQUNBLEtBQUtBLENBQUNBLE1BQU1BLENBQUNBLEtBQUlBLENBQUNBLEtBQUtBLENBQUNBLE9BQU9BLENBQUNBLEdBQUdBLENBQUNBLEVBQUVBLENBQUNBLENBQUNBLENBQUNBO29CQUM5Q0EsS0FBSUEsQ0FBQ0EsVUFBVUEsQ0FBQ0EsZUFBZUEsQ0FBQ0EsS0FBSUEsQ0FBQ0EsVUFBVUEsRUFBRUEsR0FBR0EsQ0FBQ0EsQ0FBQ0E7Z0JBQzFEQSxDQUFDQTtZQUNMQSxDQUFDQSxDQUFDQSxDQUFDQTtRQUNQQSxDQUFDQTtRQUNHSCw0QkFBT0EsR0FBZEE7WUFDT0ksTUFBTUEsSUFBSUEsS0FBS0EsQ0FBQ0EscUJBQXFCQSxDQUFDQSxDQUFDQTtRQUMzQ0EsQ0FBQ0E7UUFDTUosNEJBQU9BLEdBQWRBO1lBQUFLLGlCQVNDQTtZQVJHQSxNQUFNQSxDQUFDQSxJQUFJQSxDQUFDQSxtQkFBbUJBLENBQUNBLElBQUlBLENBQUNBLElBQUlBLENBQUNBLFVBQVVBLEVBQUVBLElBQUlBLENBQUNBLENBQUNBLElBQUlBLENBQUNBLFVBQUNBLEtBQVVBO2dCQUN4RUEsS0FBS0EsQ0FBQ0EsT0FBT0EsQ0FBQ0EsVUFBQ0EsSUFBSUE7b0JBQ2ZBLEVBQUVBLENBQUFBLENBQUNBLEtBQUlBLENBQUNBLEtBQUtBLENBQUNBLE9BQU9BLENBQUNBLElBQUlBLENBQUNBLElBQUlBLENBQUNBLENBQUNBLENBQUNBLENBQUNBLENBQUNBO3dCQUNoQ0EsS0FBSUEsQ0FBQ0EsS0FBS0EsQ0FBQ0EsSUFBSUEsQ0FBQ0EsSUFBSUEsQ0FBQ0EsQ0FBQ0E7b0JBQzFCQSxDQUFDQTtnQkFDTEEsQ0FBQ0EsQ0FBQ0EsQ0FBQ0E7Z0JBQ0hBLE1BQU1BLENBQUNBLEtBQUlBLENBQUNBLEtBQUtBLENBQUNBLEtBQUtBLEVBQUVBLENBQUNBO1lBQzlCQSxDQUFDQSxDQUFDQSxDQUFDQTtRQUNQQSxDQUFDQTtRQUNHTCx3QkFBR0EsR0FBVkEsVUFBV0EsR0FBTUE7WUFBakJNLGlCQWFJQTtZQVpHQSxNQUFNQSxDQUFDQSxJQUFJQSxPQUFPQSxDQUFVQSxVQUFDQSxPQUFPQSxFQUFFQSxNQUFNQTtnQkFDeENBLEVBQUVBLENBQUNBLENBQUNBLEtBQUlBLENBQUNBLEtBQUtBLENBQUNBLE9BQU9BLENBQUNBLEdBQUdBLENBQUNBLEdBQUdBLENBQUNBLENBQUNBLENBQUNBLENBQUNBLENBQUNBO29CQUMvQkEsT0FBT0EsQ0FBQ0EsSUFBSUEsQ0FBQ0EsQ0FBQ0E7Z0JBQ2xCQSxDQUFDQTtnQkFBQ0EsSUFBSUEsQ0FBQ0EsQ0FBQ0E7b0JBQ0pBLEtBQUlBLENBQUNBLG1CQUFtQkEsQ0FBQ0EsSUFBSUEsQ0FBQ0EsS0FBSUEsQ0FBQ0EsVUFBVUEsRUFBRUEsR0FBR0EsQ0FBQ0EsQ0FBQ0EsSUFBSUEsQ0FBQ0EsVUFBQ0EsS0FBS0E7d0JBQzNEQSxLQUFLQSxDQUFDQSxPQUFPQSxDQUFDQSxVQUFVQSxJQUFJQTs0QkFDeEIsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7d0JBQzFCLENBQUMsQ0FBQ0EsQ0FBQ0E7d0JBQ0hBLE9BQU9BLENBQUNBLEtBQUtBLENBQUNBLE1BQU1BLEdBQUdBLENBQUNBLENBQUNBLENBQUNBO29CQUM5QkEsQ0FBQ0EsQ0FBQ0EsQ0FBQ0E7Z0JBQ1BBLENBQUNBO1lBQ0xBLENBQUNBLENBQUNBLENBQUNBO1FBQ1BBLENBQUNBO1FBQ0xOLGlCQUFDQTtJQUFEQSxDQXhEQSxBQXdEQ0EsSUFBQTtJQUVELEFBQW9CLE9BQVgsVUFBVSxDQUFDIiwiZmlsZSI6IlJlcG9zaXRvcnkuanMiLCJzb3VyY2VSb290IjoiL2hvbWUva2Fwa2UvcHJvamVjdHMvdGFsYXJpYS8iLCJzb3VyY2VzQ29udGVudCI6W119